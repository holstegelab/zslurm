#!/usr/bin/env python
import zslurm_shared
import getpass
import socket
try: 
    import http.client as httplib
except:
    import httplib
import argparse

s = zslurm_shared.TimeoutServerProxy(zslurm_shared.get_job_url(), allow_none = True)

parser = argparse.ArgumentParser(description='ZSlurm node listing')
parser.add_argument('--all', action='store_true', help='Show also queued nodes.')
parser.add_argument('--pretty', action='store_true', help='Pretty print the table.')
args = parser.parse_args()
try:
    nodes = s.list_nodes()
    
    if args.pretty:
        table = []
        for partition, engine_id, cluster_id, cores, totmem, runtime, timeleft, njobs, cpu_usage, mem_usage, load, status in nodes:
            runtime = zslurm_shared.format_time(runtime)
            timeleft = zslurm_shared.format_time(timeleft)
            table.append([engine_id, cluster_id, partition, '%.0f' % cores, '%.1fGb' % (totmem/1024.0), runtime, timeleft,  njobs, '%.1f' % cpu_usage, '%.1f' % mem_usage, '%.1f' % load, status])
        import tabulate            
        print(tabulate.tabulate(table, headers=['ID','SLURM','PARTITION','CORES','MEM','TIME','REMAINING','NJOBS','CPU','MEM','LOAD','STATUS']))
    else:
        print("ID\tSLURM\tPARTITION\tCORES\tMEM\tTIME\tREMAINING\tNJOBS\tCPU\tMEM\tLOAD\tSTATUS")
        for partition, engine_id, cluster_id, cores, totmem, runtime, timeleft, njobs, cpu_usage, mem_usage, load, status in nodes:
            runtime = zslurm_shared.format_time(runtime)
            timeleft = zslurm_shared.format_time(timeleft)
            print('%s\t%s\t%s\t%.2g\t%.1fGb\t%s\t%s\t%d\t%.1f\t%.1f\t%.1f\t%s' % (engine_id, cluster_id, partition, cores, totmem/1024.0, runtime, timeleft, njobs, cpu_usage, mem_usage, load, status))

except (socket.error, httplib.HTTPException) as serror:
    print('Queue request failed, could not connect to ZSlurm manager on ' + zslurm_shared.get_job_url())
